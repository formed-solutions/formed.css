// Editor component
// Input and select text through a common interface with this component.
//
// Stability: unstable (1)

// Dependences

@import '../../config';
@import "../../_mixins/borders";
@import "../../_mixins/transitions";
@import "../../_mixins/placeholder";
@import "../../_functions/strip-unit";
@import "../../_functions/rem";

// Main container component
// ----------------------------------------------------------------------------

.Editor {
  display: flex;
  flex-direction: column;
  position: relative;

  margin: 0;
  max-width: 100%;
  padding: #{rem($editor-label-height)} 0 0;
  width: rem($editor-width);

  font-size: rem($editor-font-size);

  // Editor control frame that will we animate.

  &:before {
    @include border-radius($editor-control-border-radius);
    @include transition-default(border-color, transform);

    display: inline-block;
    position: absolute;
    top: rem($editor-label-height);
    transform: scaleY(1);

    border: 2px solid $editor-control-border-color;
    height: rem($editor-control-height);
    width: 100%;

    content: "";
    will-change: transform;
  }

  &.is-focused:before {
    transform: scaleY(1.2) perspective(1px) translateZ(0);

    border-color: $editor-color-focus;
  }

  &.is-disabled:before {
    display: none;
  }

  &.is-readonly:before {
    border-color: $editor-color-disable-light;
    border-style: dotted;
  }
}

// Editor control
// ----------------------------------------------------------------------------

// Child: actual control node.

.Editor-control {
  @include border-radius($editor-control-border-radius);
  @include transition-default(border-color color);

  display: block;
  position: relative;
  z-index: 1;

  border: none;
  height: rem($editor-control-height);
  margin: 0;
  padding: rem($editor-control-padding);
  width: $editor-control-width;

  background: transparent;

  color: inherit;
  font-family: inherit;
  font-size: rem($editor-control-font-size);
  line-height: normal;
  text-align: left;

  @include placeholder {
    opacity: 0.54;

    font-weight: 200;
    letter-spacing: 0.01em;
  }

  // State

  &:focus,
  .Editor.is-focused & {
    color: $editor-color-focus;
    outline: none;
  }

  .Editor.is-disabled & {
    background-color: $editor-color-disable-light;

    color: $editor-color-disable-dark;
  }

  &[readonly],
  .Editor.is-readonly & {
    cursor: not-allowed;
  }

  // Context

  .Editor.has-icon & {
    padding-right: rem($spacing-base + $spacing-small);
  }
}

textarea.Editor-control {
  height: auto;
}

// Label
// ----------------------------------------------------------------------------

// Child: add a label to an editor.

.Editor-label {
  @include transition-default(color, transform);

  display: block;
  left: rem($editor-control-padding);
  overflow: hidden;
  position: absolute;
  top: 0;
  transform-origin: top left;

  padding: 0;

  color: $editor-color;
  line-height: strip-unit($editor-label-height / $font-size-base);
  text-align: left;
  white-space: nowrap;

  pointer-events: none;
  will-change: transform;

  // State

  .Editor.is-focused & {
    transform: scale(0.8) perspective(1px) translateZ(0);
  }

  .Editor.is-focused & {
    color: $editor-color-focus;
  }

  .Editor.is-disabled & {
    color: $editor-color-disable-dark;
  }

  .Editor.is-invalid & {
    color: $editor-invalid-color;
  }
}

// Editor icons
// ----------------------------------------------------------------------------

.Editor-icon.Editor-icon {
  $pos: ($editor-control-height * 0.25 + $editor-label-height);
  @include transition-default(color);

  display: inline-block;
  position: absolute;
  right: rem($spacing-small);
  top: rem($pos);

  color: $editor-color;
  text-align: center;

  will-change: transform;

  &,
  & > * {
    height: rem($font-size-base);
    width: rem($font-size-base);

    vertical-align: baseline;
  }

  .Editor.is-focused & {
    color: $editor-color-focus;
  }
}

// Feedback
// ----------------------------------------------------------------------------

// Child: provide valdidation messages.

.Editor-feedback {
  $height: ($font-size-medium + 8) / $font-size-medium;

  display: none;
  visibility: hidden;

  padding: 0 #{rem($editor-control-padding)};
  width: 100%;

  color: $editor-invalid-color;
  font-size: rem($font-size-medium);
  line-height: strip-unit($height);

  .Editor.is-invalid & {
    display: block;
    visibility: visible;
  }
}
