// Editor component
// Input and select text through a common interface with this component.
//
// Stability: unstable (1)

// Dependences

@import '../../config';
@import "../../_mixins/borders";
@import "../../_mixins/transitions";
@import "../../_functions/rem";
@import "node_modules/underscore.css.scss/scss/mixins/placeholder";

// Main container component
// ----------------------------------------------------------------------------

.Editor {
  display: flex;
  flex-direction: column;
  justify-content: center;
  position: relative;

  height: rem(82);
  margin: 0;
  max-width: 100%;
  padding: 0;
  width: rem($editor-width);

  font-size: rem($editor-font-size);

  // Editor control frame that will we animate.

  &:before {
    @include border-radius($editor-control-border-radius);
    @include transition-default(border-color, transform);

    display: inline-block;
    position: absolute;
    top: 50%;
    transform: translateY(-50%) scaleY(0.80);

    border: 2px solid $editor-color;
    height: rem(40);
    width: 100%;

    content: "";
    will-change: transform;
  }

  &.is-focused:before {
    transform: translateY(-50%) scaleY(1);

    border-color: $editor-color-focus;
  }

  &.is-disabled:before {
    display: none;
  }

  &.is-readonly:before {
    border-color: $editor-color-disable-light;
    border-style: dotted;
  }
}

// Editor control
// ----------------------------------------------------------------------------

// Child: actual control node.

.Editor-control {
  @include border-radius($editor-control-border-radius);
  @include transition-default(border-color color);

  display: block;

  border: none;
  height: rem(32);
  margin: 0;
  padding: rem($editor-control-padding);
  width: $editor-control-width;

  background: transparent;

  color: inherit;
  font-family: inherit;
  font-size: rem($editor-control-font-size);
  line-height: normal;
  text-align: left;

  will-change: transform;

  @include _placeholder {
    opacity: 0.54;

    font-weight: 200;
    letter-spacing: 0.01em;
  }

  // State
  &:focus {
    outline: none;
  }

  &:focus,
  .Editor.is-focused & {
    color: $editor-color-focus;
  }

  .Editor.is-disabled & {
    background-color: $editor-color-disable-light;

    color: $editor-color-disable-dark;
  }

  &[readonly],
  .Editor.is-readonly & {
    cursor: not-allowed;
  }

  // Context

  .Editor.has-icon & {
    padding-right: rem(22 + 7);
  }
}

textarea.Editor-control {
  height: auto;
}

// Label
// ----------------------------------------------------------------------------

// Child: add a label to an editor.

.Editor-label {
  @include transition-default(color, font-size, transform);

  display: block;
  left: rem($editor-control-padding);
  overflow: hidden;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);

  padding: 0;

  color: $editor-color;
  line-height: 1.5;
  text-align: left;
  white-space: nowrap;

  pointer-events: none;
  will-change: transform;

  // State

  .Editor.is-dirty &,
  .Editor.is-focused & {
    transform: translateY(-200%);

    font-size: $font-size-medium;
  }

  .Editor.is-focused & {
    color: $editor-color-focus;
  }

  .Editor.is-disabled & {
    color: $editor-color-disable-dark;
  }

  .Editor.is-invalid & {
    color: $editor-invalid-color;
  }

  // Context

  .Editor.has-placeholder & {
    visibility: hidden;
  }
}

// Editor icons
// ----------------------------------------------------------------------------

.Editor-icon.Editor-icon {
  @include transition-default(color, transform);

  display: inline-block;
  position: absolute;
  right: rem(5);
  top: 50%;
  transform: translateY(-50%) scaleX(0.72) scaleY(0.72);

  text-align: center;

  will-change: transform;

  &,
  & > * {
    height: rem(22);
    width: rem(22);
  }

  .Editor.is-focused & {
    transform: translateY(-50%) scaleX(1) scaleY(1);

    color: $editor-color-focus;
  }
}

// Feedback
// ----------------------------------------------------------------------------

// Child: provide valdidation messages.

.Editor-feedback {
  bottom: 0;
  display: block;
  left: 0;
  position: absolute;
  visibility: hidden;

  padding: 0 #{rem($editor-control-padding)};
  width: 100%;

  color: $editor-invalid-color;
  font-size: rem($font-size-medium);
  line-height: 1.5;

  .Editor.is-invalid & {
    visibility: visible;
  }
}
