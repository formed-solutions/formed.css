// Provide a blueprint or default arrangement for the UI.

// Dependencies
@import "../../_mixins/breakpoints";
@import "../../_mixins/shadow-level";
@import "../../_mixins/transitions";
@import "../../_functions/rem";
@import "../../_functions/em";

// z-index layout master list
$z-layout: 1 !default;
$z-header: 3 !default;
$z-mask: 4 !default;
$z-drawer: $zindex-drawer;

// Main component
// ----------------------------------------------------------------------------

.Layout {
  display: flex;
  flex-direction: column;
  overflow-y: auto;
  overflow-x: hidden;
  position: relative;
  z-index: $z-layout;

  height: 100%;
  width: 100%;

  -webkit-overflow-scrolling: touch;

  // Modifier
  &.Layout--drawerFixed {
    position: absolute;

    min-height: 100%;
  }
}


// Header region
// ----------------------------------------------------------------------------

// Child: add a header region to the layout.

.Layout-header {
  @include shadow-level(2);
  @include transition-default(transform, width);
  @include breakpoint-media-min('md') {
    height: rem($layout-header-height-md);
  }

  display: flex;
  flex-direction: column;
  flex-shrink: 0;
  flex-wrap: nowrap;
  justify-content: flex-start;
  position: relative;
  z-index: $z-header;

  height: rem($layout-header-height);
  width: 100%;

  color: #fff;

  will-change: transform;

  // Modifier: fixed drawer.

  .Layout--drawerFixed > & {
    @include breakpoint-media-min('md') {
      transform: translateX($layout-left-offset);

      width: calc(100% - #{$layout-left-offset});
    }
  }

  // Modifier: scrolling layout.

  .Layout--scroll & {
    z-index: 0;

    box-shadow: none;
  }
}

// Child: inner wrapper for header child.

.Layout-header-inner {
  @include breakpoint-media-min('md') {
    // padding-left: rem($spacing-base);
    padding-right: rem($spacing-base);
  }

  align-items: center;
  align-self: stretch;
  display: flex;
  flex-wrap: nowrap;

  height: 100%;
  padding: 0 #{rem($spacing-medium)};
  width: 100%;

  .Layout--drawerFixed > .Layout-header & {
    @include breakpoint-media-min('md') {
      padding-left: rem($spacing-base);
    }
  }
}

// Child: menu button to activate `Layout-drawer`.
// Visible by default and hidden for larger screen sizes.

.Layout-header-menu {
  $size: rem(48);

  display: inline-block;

  border: 0;
  height: $size;
  margin: 0;
  padding: 0;
  width: $size;

  background-color: transparent;

  color: inherit;
  text-align: center;

  cursor: pointer;

  .Layout--drawerFixed > .Layout-header & {
    @include breakpoint-media-min('md') {
      display: none;
    }
  }
}

// Layout title
// ----------------------------------------------------------------------------

.Layout-title {
  @include breakpoint-media-min('md') {
    height: rem($layout-header-height-md);

    line-height: em($layout-header-height-md, $layout-title-font-size);
  }

  display: block;

  margin: 0;
  height: rem($layout-header-height);
  width: 100%;

  font-size: rem($layout-title-font-size);
  letter-spacing: 0.01em;
  line-height: em($layout-header-height, $layout-title-font-size);
}

// Layout main
// ----------------------------------------------------------------------------

.Layout-main {
  @include transition-default(transform, width);

  display: inline-block;
  flex-grow: 1;
  overflow-x: hidden;
  overflow-y: auto;
  position: relative;

  width: 100%;

  will-change: transform;
  -webkit-overflow-scrolling: touch;

  // Modifier: fixed drawer
  .Layout--drawerFixed & {
    @include breakpoint-media-min('md') {
      transform: translateX($layout-left-offset);

      width: calc(100% - #{$layout-left-offset});
    }
  }

  // Modifier: scrolling layout
  .Layout--scroll & {
    overflow: visible;
  }

  // Hide overflow for instances where we have a drawer and it is active.

  .Layout--scroll .Layout-drawer.is-active ~ & {
    overflow: hidden;
  }
}

// Layout container
// ----------------------------------------------------------------------------

// Child: wrap content to position in the center horizontally.  Defaults to
// 100% width of parent.  User size helper to adjust width.

.Layout-container {
  margin: 0 auto;
  padding: 0 rem($spacing-base);
  width: 100%;
}

// Layout drawer
// ----------------------------------------------------------------------------

// Child: mimic sidebar (aside) behavior.  Hidden by default for smaller
// screen sizes.

.Layout-drawer {
  @include transition-default(transform);

  backface-visibility: hidden;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  left: 0;
  overflow: visible;
  overflow-y: auto;
  position: absolute;
  transform: translateX($layout-drawer-translateX);
  z-index: $z-drawer;

  border-right: 1px solid transparent;
  height: 100%;
  min-height: 100%;
  width: rem($layout-drawer-width);

  background-color: $layout-drawer-background-color;

  will-change: transform;
  -webkit-overflow-scrolling: touch;

  &.is-active {
    @include shadow-level(1);

    transform: translateX(0);

    border-color: $layout-drawer-border-color;
  }

  // Modifiers
  .Layout--drawerFixed > & {
    @include breakpoint-media-min('md') {
      @include shadow-level(1);

      transform: translateX(0);

      border-color: $layout-drawer-border-color;
    }

    top: 0;
  }
}

// Layout mask
// ----------------------------------------------------------------------------

// Child: creates a mask that will main area but render below draw.

.Layout-mask {
  @include transition-default(background-color);

  left: 0;
  position: absolute;
  top: 0;
  visibility: hidden;
  z-index: $z-mask;

  height: 100%;
  width: 100%;

  background-color: transparent;

  &.is-active {
    visibility: visible;

    background-color: rgba(#000, 0.5);
  }
}
